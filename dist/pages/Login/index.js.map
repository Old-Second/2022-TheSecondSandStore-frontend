{"version":3,"file":"pages/Login/index.js","sources":["webpack:///._src_pages_Login_index.jsx","webpack:///._src_Images_background.png","webpack:///._src_Images_字体1.png","webpack:///._src_pages_Login_index.css","webpack:///./src/pages/Login/index.jsx?3485"],"sourcesContent":["import { Component } from 'react'\r\nimport { View, Input, Button,Image} from '@tarojs/components'\r\nimport Taro from '@tarojs/taro'\r\nimport './index.css' \r\nimport image from '../../Images/background.png'\r\nimport ziti from '../../Images/字体1.png'\r\nimport Fetch from '../../Service/fetch'\r\n\r\nexport default class Index extends Component {\r\n  constructor() {\r\n    super(...arguments)\r\n    this.state = {\r\n        account: '',\r\n        password: '',\r\n    }\r\n}\r\ngetuserid(e) {\r\n    this.setState({\r\n        account: e.target.value\r\n    });\r\n}\r\n\r\ngetpwd(e) {\r\n    this.setState({\r\n        password: e.target.value\r\n    });\r\n}\r\n\r\n/* login = async () => {\r\n    const {account,password} = this.state;\r\n    if (account && password ) {\r\n      const res = await login(account, password)\r\n      switch (res)\r\n    } */\r\n  login=()=>{\r\n      const {account,password} = this.state;\r\n      if (account && password ) {\r\n       Fetch(\r\n         '/auth',\r\n         {\r\n           account,\r\n           password\r\n         },\r\n         'POST'\r\n       ).then(res => {\r\n         switch (res.code) {\r\n           case 200:\r\n             Taro.setStorage({\r\n               key: 'account',\r\n               data: account\r\n             });\r\n             Taro.setStorage({\r\n               key: 'password',\r\n               data: password\r\n             });\r\n             Taro.setStorage({\r\n               key: 'token',\r\n               data: res.data,\r\n           });\r\n           Taro.reLaunch({\r\n             url:'/pages/Square/Square'\r\n           });\r\n           break;\r\n         }\r\n      }).catch(() => {\r\n        Taro.showToast({\r\n          icon: 'none',\r\n          title: '账号或者密码错误'\r\n        });\r\n      })\r\n    }\r\n    if (!account || !password) {\r\n      Taro.showToast({\r\n        icon: 'none',\r\n        title: '账号或密码不能为空'\r\n      });\r\n    }\r\n  }\r\n\r\n    render () {\r\n      \r\n      return (\r\n     <View className='Login'>\r\n       <Image src={image}></Image>\r\n        <View className='header'>\r\n         <Image src={ziti}></Image>\r\n        </View>\r\n         <View className='passWord'>\r\n          <Input type='number' placeholder='请输入您的学号' className='input1' onInput={this.getuserid.bind(this)} />\r\n          <Input type='password' password placeholder='密码' className='input2' onInput={this.getpwd.bind(this)} />\r\n         </View>\r\n         <View>\r\n             <Button className='btn1' onClick={this.login}>登录</Button>\r\n         </View>\r\n     </View>\r\n        )\r\n    }\r\n  }","module.exports = __webpack_public_path__ + \"Images/background.png\";","module.exports = __webpack_public_path__ + \"Images/字体1.png\";","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js!./index.jsx\"\nvar config = {\"navigationBarTitleText\":\"店小贰\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/Login/index', {root:{cn:[]}}, config || {}))\n\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA0BA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AAjBA;AARA;AA4BA;AACA;AACA;AAFA;AA5BA;AAiCA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAnEA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAAA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA6CA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AADA;AATA;AAcA;;;;AAxFA;AACA;;;;;;;;;;;;;ACTA;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}